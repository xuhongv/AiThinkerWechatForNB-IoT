<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>安信可NB-IoT模组定位应用</title>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.6.0.js"></script>
    <link rel="stylesheet" href="http://i.gtimg.cn/vipstyle/frozenui/2.0.0/css/frozen.css">
</head>
<!--<script src="https://unpkg.com/mqtt@4.2.8/dist/mqtt.min.js"></script>-->
<script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>

<script type="text/javascript"
        src="//api.map.baidu.com/api?type=webgl&v=1.0&ak=6UHwYxs0H4u8SYXUHnIYI1M5UjiqBxzH"></script>
<style type="text/css">
    html,
    body {
        height: 100%;
        margin: 0px;
        padding: 0px;
    }

    #allmap {
        width: 100%;
        height: 100%;
        overflow: hidden;
        margin: 0;
        font-family: "微软雅黑";
    }

    #me {
        position: absolute;
        bottom: 50px;
        left: 25%;
        z-index: 99;
        transform: translateX(-60%);
        padding: 8%;
        font-size: 18px;
        color: #000;
        text-align: center;

    }

    #scan {
        position: absolute;
        bottom: 50px;
        left: 50%;
        z-index: 99;
        transform: translateX(-50%);
        padding: 3%;
        font-size: 18px;
        color: #000;
        text-align: center;
        opacity: 0.9;
        background: azure;
    }

    #connect {
        position: absolute;
        bottom: 50px;
        left: 50%;
        z-index: 99;
        transform: translateX(25%);
        padding: 8%;
        font-size: 18px;
        color: #000;
        text-align: center;
    }

    .img-click {
        width: 70px;
        height: 70px;
    }

    p {
        font-size: 15px;
    }

    #title-show {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 99;
        transform: translateX(-25%);
        padding: 8%;
    }

</style>

<body onload="initMap()" ontouchstart>

<div id="allmap"></div>

<div id="me">
    <!--    <img class="img-click" src="http://fae.aithinker.com/static/ways.png">-->
    <!--    <p>路线</p>-->
</div>

<div id="scan" onclick="startScan()">
    <img class="img-click" src="http://fae.aithinker.com/static/location.png">
    <p><strong>扫描模组二维码</strong></p>
</div>


<div id="connect">
    <!--    <img class="img-click" src="http://fae.aithinker.com/static/ways.png">-->
    <!--    <p>路线</p> <p id="title-status" style="color:orange"></p> -->
</div>


<div class="ui-tooltips ui-tooltips-guide" id="title-show">
    <div class="ui-tooltips-cnt" id="text-status">
        <i class="ui-icon-talk"></i>无法获取模组信息，随机定位显示。
    </div>
</div>


<div id="load" class="demo-block">
    <div class="ui-loading-block show">
        <div class="ui-loading-cnt">
            <i class="ui-loading-bright"></i>
            <p id="show_msg">正在加载中...</p>
        </div>
    </div>
</div>


<div id="tip-load" class="ui-dialog ui-dialog-operate ui-dialog-operate-icon show">
    <div class="ui-dialog-cnt">
        <div class="ui-dialog-hd">
            <div class="ui-img">
                <span style=" background-image:url(http://fae.aithinker.com/static/EC-01F.png)"></span>
            </div>
        </div>
        <div class="ui-dialog-bd">
            <p class="ui-txt-default">
                Step1:购买安信可NB-IoT模组+GPS模组,并烧录好微信小程序定位专用固件。<br/><br/>Step2:确定已插好SIM卡,并且放在室外。<br/><br/></p>
        </div>
        <div class="ui-dialog-ft" onclick="hide_tip_load()">
            <button class="ui-btn-lg">我已做好上述步骤</button>
        </div>
    </div>
</div>

</body>


<script type="text/javascript">

    let map = null
    // 创建小车图标
    var myIcon = new BMapGL.Icon("http://fae.aithinker.com/static/aithinker_location_1.png", new BMapGL.Size(55, 112));
    let jsConfig = <%- JSON.stringify(JSON.parse(data)) %>

        wx.error((res) => {
            console.log(res);
            // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
        });


    wx.ready((res) => {
        console.log("ready...");
        // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，
        // 所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。
        // 对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
    })

    wx.config(jsConfig)


    // Create a client instance
    var options = {
        //mqtt客户端的id，这里面应该还可以加上其他参数，具体看官方文档
        clientId: 'mqttjs_' + Math.random().toString(16).substr(2, 8),
        keepalive: 60,
        clean: false
    }
    //console.log(options.clientId);

    //浏览器采用websocket协议，host主机地址为192.168.0.200，端口为9001，路径为/mqtt
    var client = mqtt.connect("ws://www.your-domain.com:8083/mqtt", options) // you add a ws:// url here

    //建立连接
    client.on('connect', function () {
        console.log("connect success!")
        $("#load").hide();
    })

    //如果连接错误，打印错误
    client.on('error', function (err) {
        $("#load").hide();
        alert("连接服务器失败，请联系管理员。")
        console.log(err)
        client.end()
    })


    //坐标转换完之后的回调函数
    translateCallback = function (data) {
        if (data.status === 0) {

            new BMapGL.Geocoder().getLocation(new BMapGL.Point(data.points[0].lng, data.points[0].lat), function (rs) {
                console.log(rs)
                map.clearOverlays()
                // 创建Marker标注，使用图标
                var pt = new BMapGL.Point(data.points[0].lng, data.points[0].lat)
                var marker = new BMapGL.Marker(pt, {
                    icon: myIcon
                });
                // 将标注添加到地图
                map.addOverlay(marker);
                map.setCenter(data.points[0]);
                map.setMaxZoom(16);


                var p = document.getElementById('text-status');
                $("#text-status").empty();
                p.innerHTML = " <i class=\"ui-icon-talk\"></i>定位信息:" + rs.address
                alert("定位成功:" + rs.address)

            })


        }
    }

    //如果client订阅主题成功，那么这里就是当接收到自己订阅主题的处理逻辑
    client.on('message', function (topic, message) {
        //{"long":22.60256533,"lat":113.84054317,"qos":24}
        console.log('-> ' + message.toString())
        //alert(message.toString())
        let payload = JSON.parse(message.toString())
        // console.log('qos -> ' + payload.qos)
        // console.log('qos -> ' + payload.long)
        // console.log('qos -> ' + payload.lat)
        // message is Buffer,此处就是打印消息的具体内容
        if (map != null) {
            var convertor = new BMapGL.Convertor();
            var pointArr = [];
            pointArr.push(new BMapGL.Point(payload.lat, payload.long));
            convertor.translate(pointArr, COORDINATES_WGS84, COORDINATES_BD09, translateCallback)
        }
    })


    function initMap() {

        // 按住鼠标右键，修改倾斜角和角度
        map = new BMapGL.Map("allmap");    // 创建Map实例
        //map.centerAndZoom(new BMapGL.Point(113.85201319639442, 22.605670783478402), 19);  // 初始化地图,设置中心点坐标和地图级别
        map.centerAndZoom(new BMapGL.Point(111.99797290964547, 21.816852522754935), 16);  // 初始化地图,设置中心点坐标和地图级别 {lng: , lat: }
        map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
        map.setHeading(64.5);
        var scaleCtrl = new BMapGL.ScaleControl();
        map.addControl(scaleCtrl);
        var zoomCtrl = new BMapGL.ZoomControl();
        map.addControl(zoomCtrl);


        var navi3DCtrl = new BMapGL.NavigationControl3D();  // 添加3D控件
        map.addControl(navi3DCtrl);


        // 创建Marker标注，
        var pt = new BMapGL.Point(111.99797290964547, 21.816852522754935);
        var marker = new BMapGL.Marker(pt, {
            icon: myIcon
        });
        // 将标注添加到地图
        map.addOverlay(marker);

    }

    // 为缩放控件添加class，控制样式
    function setClassName(name) {
        if (!control) {
            return;
        }
        control.setClassName(name);
    }

    //开始扫描
    function startScan() {
        wx.scanQRCode({
            needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
            scanType: ["qrCode", "barCode"], // 可以指定扫二维码还是一维码，默认二者都有
            success: function (res) {

                var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
                //判断是否有 /
                if (result.lastIndexOf('/') == -1) {
                    return;
                }
                var imei = result.substring(0, result.lastIndexOf('/'))
                //判断是否IMEI号
                if (isIMEI(result.substring(0, result.lastIndexOf('/')))) {
                    //订阅主题 presence
                    client.subscribe("/" + imei + "/devPub", 1, function (err) {
                        if (!err) {
                            $("#load").hide();
                            alert("订阅成功：" + imei)
                        } else {
                            //打印错误
                            console.log(err)
                        }
                    })
                } else {
                    alert("非法二维码")
                }
            }
        })
    }

    function hide_tip_load() {
        $('#tip-load').hide()
    }

    /**
     *    IMEI(International Mobile Equipment Identity)是国际移动设备身份码的缩写，国际移动装备辨识码，是由15位数字组成的"电子串号"，它与每台手机一一对应，
     *    而且该码是全世界唯一的。每一部手机在组装完成后都将被赋予一个全球唯一的一组号码，这个号码从生产到交付使用都将被制造生产的厂商所记录。
     *    IMEI码由GSM（全球移动通信协会）统一分配，授权BABT（英国通信认证管理委员会）审受。
     *    IMEI由15位数字组成，其组成为：
     *    1、前6位数（TAC，Type ApprovalCode)是"型号核准号码"，一般代表机型。
     *    2、接着的2位数（FAC，Final Assembly Code)是"最后装配号"，一般代表产地。
     *    3、之后的6位数（SNR)是"串号"，一般代表生产顺序号。
     *    4、最后1位数（SP)通常是"0"，为检验码，备用。
     */
    function isIMEI(val) {
        var reg = /^\d{15}$/;
        if (reg.test(val)) {
            return true
        } else {
            return false
        }
    }

</script>

</html>